{"version":3,"sources":["state/action-types/index.ts","state/reducers/alertReducer.ts","state/reducers/repositoriesReduser.ts","state/reducers/index.ts","state/store.ts","state/action-creators/index.ts","components/NavBar.tsx","hooks/useTypedSelector.ts","components/RepositoryItem.tsx","components/RepositoriesList.tsx","hooks/useActions.ts","components/Layout.tsx","components/App.tsx","index.tsx"],"names":["SEARCH_REPOSITORIES","SEARCH_REPOSITORIES_SUCCESS","SEARCH_REPOSITORIES_ERROR","FOUND_SUCESS","FOUND_NOTHING","initialState","found","alertReducer","state","action","type","loading","error","data","reducer","payload","reducers","combineReducers","repositories","repositoriesReduser","alert","store","createStore","applyMiddleware","thunk","searchRepositories","term","dispatch","a","axios","get","params","text","names","objects","map","result","package","length","message","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","title","textAlign","NavBar","classes","React","useState","anchorEl","setAnchorEl","handleClose","className","AppBar","position","color","Toolbar","IconButton","onClick","event","currentTarget","edge","aria-label","id","keepMounted","open","Boolean","onClose","MenuItem","Typography","variant","useTypedSelector","useSelector","margin","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","secondary","span","display","width","RepositoryItem","expanded","setExpanded","items","setItems","useEffect","splice","item","i","Accordion","onChange","panel","isExpanded","AccordionSummary","expandIcon","aria-controls","name","description","AccordionDetails","links","npm","Link","href","Divider","repository","homepage","Button","Alert","props","elevation","justifyContent","btn","padding","SearchForm","RepositoriesList","setTerm","useDispatch","bindActionCreators","actionCreators","useActions","setOpen","formSubmitHandler","preventDefault","reason","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","noValidate","autoComplete","onSubmit","e","TextField","label","target","value","CircularProgress","backgroundColor","background","default","minHeight","paddingBottom","Layout","Container","maxWidth","createMuiTheme","primary","main","App","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"sRAAaA,EAAsB,sBACtBC,EAA8B,8BAC9BC,EAA4B,4BAC5BC,EAAe,eACfC,EAAgB,gBCDvBC,EAAe,CACjBC,OAAO,GAgBIC,EAXM,WAA4D,IAA3DC,EAA0D,uDAAlDH,EAAcI,EAAoC,uCAC5E,OAAQA,EAAOC,MACX,KAAKP,EACD,MAAO,CAAEG,OAAO,GACpB,KAAKF,EACD,MAAO,CAAEE,OAAO,GACpB,QACI,OAAOE,ICTbH,EAAe,CACjBM,SAAS,EACTC,MAAO,KACPC,KAAM,IAoBKC,EAjBC,WAGS,IAFrBN,EAEoB,uDAFOH,EAC3BI,EACoB,uCACpB,OAAQA,EAAOC,MACX,KAAKV,EACD,MAAO,CAAEW,SAAS,EAAMC,MAAO,KAAMC,KAAM,IAC/C,KAAKZ,EACD,MAAO,CAAEU,SAAS,EAAOC,MAAO,KAAMC,KAAMJ,EAAOM,SACvD,KAAKb,EACD,MAAO,CAAES,SAAS,EAAOC,MAAOH,EAAOM,QAASF,KAAM,IAC1D,QACI,OAAOL,ICfJQ,EALEC,YAAgB,CAC7BC,aAAcC,EACdC,MAAOb,ICHEc,EAAQC,YAAYN,EAAU,GAAIO,YAAgBC,M,0CCOlDC,EAAqB,SAACC,GAC/B,8CAAO,WAAOC,GAAP,mBAAAC,EAAA,6DACHD,EAAS,CACLjB,KAAMV,IAEV2B,EAAS,CACLjB,KAAMP,IALP,kBAQwB0B,IAAMC,IACzB,yCACA,CACIC,OAAQ,CACJC,KAAMN,KAZnB,gBAQSb,EART,EAQSA,MASFoB,EAAQpB,EAAKqB,QAAQC,KAAI,SAACC,GAG5B,OAAOA,EAAOC,YAETC,OACLX,EAAS,CACLjB,KAAMP,IAGVwB,EAAS,CACLjB,KAAMN,IAGduB,EAAS,CACLjB,KAAMT,EACNc,QAASkB,IAjCd,kDAoCCN,EAAS,CACLjB,KAAMR,EACNa,QAAS,KAAMwB,UAtCpB,0DAAP,uD,wHCLEC,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAaL,EAAMM,QAAQ,IAE/BC,MAAO,CACHC,UAAW,OACXL,SAAU,QAiDPM,EA5CA,WACX,IAAMC,EAAUZ,IAChB,EAAgCa,IAAMC,SAA6B,MAAnE,mBAAOC,EAAP,KAAiBC,EAAjB,KAMMC,EAAc,WAChBD,EAAY,OAGhB,OACI,qBAAKE,UAAWN,EAAQR,KAAxB,SACI,cAACe,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,YAAhC,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,QAbA,SAACC,GACjBT,EAAYS,EAAMC,gBAaFC,KAAK,QACLT,UAAWN,EAAQN,WACnBe,MAAM,UACNO,aAAW,OALf,SAOI,cAAC,IAAD,MAEJ,eAAC,IAAD,CACIC,GAAG,cACHd,SAAUA,EACVe,aAAW,EACXC,KAAMC,QAAQjB,GACdkB,QAAShB,EALb,UAOI,cAACiB,EAAA,EAAD,CAAUV,QAASP,EAAnB,oBACA,cAACiB,EAAA,EAAD,CAAUV,QAASP,EAAnB,yBAEJ,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKlB,UAAWN,EAAQH,MAA5C,yB,QCtDP4B,EAAoDC,I,4ICW3DtC,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CAEFmC,OAAQ,QAEZC,QAAS,CACLC,SAAUvC,EAAMwC,WAAWC,QAAQ,IACnCC,UAAW,SACXC,WAAY,GAEhBC,iBAAkB,CACdL,SAAUvC,EAAMwC,WAAWC,QAAQ,IACnCtB,MAAOnB,EAAM6C,QAAQvD,KAAKwD,WAE9BC,KAAM,CACFC,QAAS,QACTC,MAAO,OACPZ,OAAQ,YAoGLa,GA/FQ,SAAC,GAAqB,IAAnB/E,EAAkB,EAAlBA,KAChBuC,EAAUZ,KAChB,EAAgCa,IAAMC,UAAyB,GAA/D,mBAAOuC,EAAP,KAAiBC,EAAjB,KACA,EAA0BxC,mBAAwB,IAAlD,mBAAOyC,EAAP,KAAcC,EAAd,KAkBA,OAVAC,qBAAU,WACFpF,EAAKyB,QACL0D,EAASnF,EAAKqF,OAAO,EAAG,OAE7B,CAACrF,IAOA,qCACI,qBAAK6C,UAAWN,EAAQR,KAAxB,SACKmD,EAAM5D,KAAI,SAACgE,EAAMC,GAAP,OACP,eAACC,GAAA,EAAD,CAEIR,SAAUA,IAAQ,eAAaO,EAAI,GACnCE,UAtBfC,EAsBsC,QAAD,OAASH,EAAI,GArBnD,SAACnC,EAA8BuC,GAC3BV,IAAYU,GAAaD,KAiBjB,UAKI,eAACE,GAAA,EAAD,CACIC,WAAY,cAAC,KAAD,IACZC,gBAAA,eAAuBP,EAAI,EAA3B,cACA/B,GAAE,eAAU+B,EAAI,EAAd,aAHN,UAKI,cAACzB,EAAA,EAAD,CAAYjB,UAAWN,EAAQ4B,QAA/B,SACKmB,EAAKS,OAEV,cAACjC,EAAA,EAAD,CAAYjB,UAAWN,EAAQkC,iBAA/B,SACKa,EAAKU,iBAGd,cAACC,GAAA,EAAD,UACI,eAACnC,EAAA,EAAD,CACIC,QAAQ,SACRlB,UAAWN,EAAQqC,KAFvB,UAIKU,EAAKY,MAAMC,IACR,qCACI,cAACC,GAAA,EAAD,CACIvD,UAAWN,EAAQqC,KACnByB,KAAMf,EAAKY,MAAMC,IAFrB,iBAKQ,IACR,cAACG,GAAA,EAAD,OAEJ,KAEHhB,EAAKY,MAAMK,WACR,qCACK,IACD,cAACH,GAAA,EAAD,CACIvD,UAAWN,EAAQqC,KACnByB,KAAMf,EAAKY,MAAMK,WAFrB,oBAKQ,IACR,cAACD,GAAA,EAAD,OAEJ,KAEHhB,EAAKY,MAAMM,SACR,cAACJ,GAAA,EAAD,CACIvD,UAAWN,EAAQqC,KACnByB,KAAMf,EAAKY,MAAMM,SAFrB,sBAMA,YArDPjB,GApBrB,IAACG,OAgFI1F,EAAKyB,OAAS,GACX,cAACgF,EAAA,EAAD,CAAQzD,MAAM,UAAUG,QAtEpC,WACIgC,EAAS,GAAD,mBAAKD,GAAL,YAAelF,EAAKqF,OAAO,EAAG,QAqE9B,sBC9GhB,SAASqB,GAAMC,GACX,OAAO,cAAC,IAAD,aAAUC,UAAW,EAAG7C,QAAQ,UAAa4C,IAGxD,IAAMhF,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCE,KAAM,CACF,UAAW,CACPmC,OAAQ,EACRY,MAAO,QAEX,IAAK,CACDD,QAAS,OACTgC,eAAgB,WAGxBC,IAAK,CACDC,QAAS,aAEbC,WAAY,CACR9C,OAAQ,cA+ED+C,GA3EoB,WAC/B,MAAwBxE,mBAAS,IAAjC,mBAAO5B,EAAP,KAAaqG,EAAb,KACQtG,ECnCc,WACtB,IAAME,EAAWqG,cACjB,OAAOC,YAAmBC,EAAgBvG,GDiCXwG,GAAvB1G,mBACR,EAAwB6B,oBAAS,GAAjC,mBAAOiB,EAAP,KAAa6D,EAAb,KACA,EAAiCvD,GAC7B,SAAArE,GAAK,OAAIA,EAAMU,gBADXL,EAAR,EAAQA,KAAMD,EAAd,EAAcA,MAAOD,EAArB,EAAqBA,QAGbL,EAAUuE,GAAiB,SAAArE,GAAK,OAAIA,EAAMY,SAA1Cd,MACF8C,EAAUZ,KACV6F,EAAoB,SAACpE,GACvBA,EAAMqE,iBACN7G,EAAmBC,GACnBqG,EAAQ,KAEZ9B,qBAAU,WACD3F,GAAO8H,GAAQ,KACrB,CAAC9H,IACJ,IAAMmD,EAAc,SAACQ,EAA8BsE,GAChC,cAAXA,GAGJH,GAAQ,IAOZ,OACI,qCACI,cAACI,EAAA,EAAD,CACIjE,KAAMA,EACNkE,iBAAkB,IAClBhE,QAAShB,EACTiF,aAAc,CAAEC,SAAU,MAAOC,WAAY,UAJjD,SAMI,cAAC,GAAD,CAAOnE,QAAShB,EAAaoF,SAAS,OAAtC,iCAKJ,qBAAKnF,UAAWN,EAAQyE,WAAxB,SACI,uBACInE,UAAWN,EAAQR,KACnBkG,YAAU,EACVC,aAAa,MACbC,SAAU,SAAAC,GACNA,EAAEX,iBACFD,EAAkBY,IAN1B,UASI,cAACC,EAAA,EAAD,CACI7E,GAAG,iBACH8E,MAAM,0BAEN7C,SA/BO,SAACrC,GACxB8D,EAAQ9D,EAAMmF,OAAOC,QA+BLA,MAAO3H,IAEX,eAAC4F,EAAA,EAAD,CACIzD,MAAM,UACNG,QAASqE,EACT3E,UAAWN,EAAQuE,IAHvB,UAKK,IACD,cAAC,IAAD,CAAU9D,MAAM,oBAI3BlD,GAAW,cAAC2I,EAAA,EAAD,IACX1I,GAAS,8BAAMA,KACdD,IAAYC,GAAS,cAAC,GAAD,CAAgBC,KAAMA,Q,UEnGnD2B,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCE,KAAM,CACH2G,gBAAiB7G,EAAM6C,QAAQiE,WAAWC,QAC1CC,UAAW,QACXC,cAAe,aAiBPC,GAbA,WACX,IAAMxG,EAAUZ,KAChB,OACI,sBAAKkB,UAAWN,EAAQR,KAAxB,UACI,cAAC,EAAD,IACA,cAACiH,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAAC,GAAD,UCbVpH,GAAQqH,YAAe,CACzBxE,QAAS,CACL7E,KAAM,OACNsJ,QAAS,CACLC,KAAM,WAEVzE,UAAW,CACPyE,KAAM,cAiBHC,OAVf,WACI,OACI,cAACC,EAAA,EAAD,CAAezH,MAAOA,GAAtB,SACI,cAAC,IAAD,CAAUrB,MAAOA,EAAjB,SACI,cAAC,GAAD,SCvBhB+I,IAASC,OAAO,cAAC,GAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.c632e490.chunk.js","sourcesContent":["export const SEARCH_REPOSITORIES = 'SEARCH_REPOSITORIES'\r\nexport const SEARCH_REPOSITORIES_SUCCESS = 'SEARCH_REPOSITORIES_SUCCESS'\r\nexport const SEARCH_REPOSITORIES_ERROR = 'SEARCH_REPOSITORIES_ERROR'\r\nexport const FOUND_SUCESS = 'FOUND_SUCESS'\r\nexport const FOUND_NOTHING = 'FOUND_NOTHING'","import { FOUND_NOTHING, FOUND_SUCESS } from './../action-types/index'\r\nimport { FoundAction } from '../actions'\r\n\r\nconst initialState = {\r\n    found: true,\r\n}\r\n\r\ntype alertState =  typeof initialState\r\n\r\nconst alertReducer = (state = initialState, action: FoundAction): alertState => {\r\n    switch (action.type) {\r\n        case FOUND_SUCESS:\r\n            return { found: true }\r\n        case FOUND_NOTHING:\r\n            return { found: false }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default alertReducer\r\n","import { Action, RepositoriesState } from '../actions'\r\nimport {\r\n    SEARCH_REPOSITORIES,\r\n    SEARCH_REPOSITORIES_ERROR,\r\n    SEARCH_REPOSITORIES_SUCCESS,\r\n} from './../action-types/index'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    data: []\r\n}\r\n\r\nconst reducer = (\r\n    state: RepositoriesState = initialState,\r\n    action: Action\r\n): RepositoriesState => {\r\n    switch (action.type) {\r\n        case SEARCH_REPOSITORIES:\r\n            return { loading: true, error: null, data: [] }\r\n        case SEARCH_REPOSITORIES_SUCCESS:\r\n            return { loading: false, error: null, data: action.payload }\r\n        case SEARCH_REPOSITORIES_ERROR:\r\n            return { loading: false, error: action.payload, data: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default reducer\r\n","import { combineReducers } from 'redux'\r\nimport alertReducer from './alertReducer'\r\nimport repositoriesReduser from './repositoriesReduser'\r\n\r\n\r\nconst reducers = combineReducers({\r\n    repositories: repositoriesReduser,\r\n    alert: alertReducer\r\n})\r\n\r\nexport default reducers\r\n\r\nexport type RootState = ReturnType<typeof reducers>\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reducers from './reducers'\r\n\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk))","import axios from 'axios'\r\nimport { Dispatch } from 'redux'\r\nimport {\r\n    SEARCH_REPOSITORIES,\r\n    SEARCH_REPOSITORIES_ERROR,\r\n    SEARCH_REPOSITORIES_SUCCESS,\r\n    FOUND_SUCESS,\r\n    FOUND_NOTHING\r\n} from './../action-types/index'\r\nimport { Action, FoundAction } from '../actions'\r\n\r\nexport const searchRepositories = (term: string) => {\r\n    return async (dispatch: Dispatch<Action | FoundAction>) => {\r\n        dispatch({\r\n            type: SEARCH_REPOSITORIES,\r\n        })\r\n        dispatch({\r\n            type: FOUND_SUCESS,\r\n        })\r\n        try {\r\n            const { data } = await axios.get(\r\n                'https://registry.npmjs.org/-/v1/search',\r\n                {\r\n                    params: {\r\n                        text: term,\r\n                    },\r\n                }\r\n            )\r\n         \r\n            const names = data.objects.map((result: any) => {\r\n                \r\n                \r\n                return result.package\r\n            })\r\n            if(names.length) {\r\n                dispatch({\r\n                    type: FOUND_SUCESS,\r\n                })\r\n            } else {\r\n                dispatch({\r\n                    type: FOUND_NOTHING,\r\n                }) \r\n            }\r\n            dispatch({\r\n                type: SEARCH_REPOSITORIES_SUCCESS,\r\n                payload: names,\r\n            })\r\n        } catch (error) {\r\n            dispatch({\r\n                type: SEARCH_REPOSITORIES_ERROR,\r\n                payload: error.message,\r\n            })\r\n        }\r\n    }\r\n}\r\n","import { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport React from 'react'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n            textAlign: 'left',\r\n            flexGrow: 1,\r\n        },\r\n    })\r\n)\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles()\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget)\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position='static' color='secondary'>\r\n                <Toolbar>\r\n                    <IconButton\r\n                        onClick={handleClick}\r\n                        edge='start'\r\n                        className={classes.menuButton}\r\n                        color='inherit'\r\n                        aria-label='menu'\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                        id='simple-menu'\r\n                        anchorEl={anchorEl}\r\n                        keepMounted\r\n                        open={Boolean(anchorEl)}\r\n                        onClose={handleClose}\r\n                    >\r\n                        <MenuItem onClick={handleClose}>GitHub</MenuItem>\r\n                        <MenuItem onClick={handleClose}>LinkedIn</MenuItem>\r\n                    </Menu>\r\n                    <Typography variant='h6' className={classes.title}>\r\n                        TS_\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import { useSelector, TypedUseSelectorHook } from 'react-redux'\r\nimport { RootState } from '../state'\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector\r\n","import React, { useState, useEffect } from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { Button, Link, Divider } from '@material-ui/core'\r\nimport Accordion from '@material-ui/core/Accordion'\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails'\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { IRepository } from '../state/actions'\r\n\r\ninterface Props {\r\n    data: IRepository[]\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n           \r\n            margin: '25px',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            flexBasis: '33.33%',\r\n            flexShrink: 0,\r\n        },\r\n        secondaryHeading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            color: theme.palette.text.secondary,\r\n        },\r\n        span: {\r\n            display: 'block',\r\n            width: '100%',\r\n            margin: '5px',\r\n        },\r\n    })\r\n)\r\n\r\nconst RepositoryItem = ({ data }: Props) => {\r\n    const classes = useStyles()\r\n    const [expanded, setExpanded] = React.useState<string | false>(false)\r\n    const [items, setItems] = useState<IRepository[]>([])\r\n\r\n    const handleChange =\r\n        (panel: string) =>\r\n        (event: React.ChangeEvent<{}>, isExpanded: boolean) => {\r\n            setExpanded(isExpanded ? panel : false)\r\n        }\r\n\r\n    useEffect(() => {\r\n        if (data.length) {\r\n            setItems(data.splice(0, 10))\r\n        }\r\n    }, [data])\r\n\r\n    function showMoreHandler() {\r\n        setItems([...items, ...data.splice(0, 10)])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                {items.map((item, i) => (\r\n                    <Accordion\r\n                        key={i}\r\n                        expanded={expanded === `panel${i + 1}`}\r\n                        onChange={handleChange(`panel${i + 1}`)}\r\n                    >\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls={`panel${i + 1}bh-content`}\r\n                            id={`panel${i + 1}bh-header`}\r\n                        >\r\n                            <Typography className={classes.heading}>\r\n                                {item.name}\r\n                            </Typography>\r\n                            <Typography className={classes.secondaryHeading}>\r\n                                {item.description}\r\n                            </Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Typography\r\n                                variant='button'\r\n                                className={classes.span}\r\n                            >\r\n                                {item.links.npm ? (\r\n                                    <>\r\n                                        <Link\r\n                                            className={classes.span}\r\n                                            href={item.links.npm}\r\n                                        >\r\n                                            NPM\r\n                                        </Link>{' '}\r\n                                        <Divider />\r\n                                    </>\r\n                                ) : null}\r\n\r\n                                {item.links.repository ? (\r\n                                    <>\r\n                                        {' '}\r\n                                        <Link\r\n                                            className={classes.span}\r\n                                            href={item.links.repository}\r\n                                        >\r\n                                            GitHub\r\n                                        </Link>{' '}\r\n                                        <Divider />\r\n                                    </>\r\n                                ) : null}\r\n\r\n                                {item.links.homepage ? (\r\n                                    <Link\r\n                                        className={classes.span}\r\n                                        href={item.links.homepage}\r\n                                    >\r\n                                        Homepage\r\n                                    </Link>\r\n                                ) : null}\r\n                            </Typography>\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                ))}\r\n            </div>\r\n\r\n            {data.length > 0 && (\r\n                <Button color='primary' onClick={showMoreHandler}>\r\n                    More\r\n                </Button>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RepositoryItem\r\n","import { useState, useEffect } from 'react'\r\nimport { useActions } from '../hooks/useActions'\r\nimport { useTypedSelector } from '../hooks/useTypedSelector'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n    TextField,\r\n    Button,\r\n    CircularProgress,\r\n    Snackbar,\r\n} from '@material-ui/core'\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert'\r\nimport SendIcon from '@material-ui/icons/Send'\r\nimport RepositoryItem from './RepositoryItem'\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        '& > div': {\r\n            margin: 0,\r\n            width: '55ch',\r\n        },\r\n        '&': {\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n        },\r\n    },\r\n    btn: {\r\n        padding: '5px 0 0 0',\r\n    },\r\n    SearchForm: {\r\n        margin: '50px 0',\r\n    },\r\n}))\r\n\r\nconst RepositoriesList: React.FC = () => {\r\n    const [term, setTerm] = useState('')\r\n    const { searchRepositories } = useActions()\r\n    const [open, setOpen] = useState(false)\r\n    const { data, error, loading } = useTypedSelector(\r\n        state => state.repositories\r\n    )\r\n    const { found } = useTypedSelector(state => state.alert)\r\n    const classes = useStyles()\r\n    const formSubmitHandler = (event: any) => {\r\n        event.preventDefault()\r\n        searchRepositories(term)\r\n        setTerm('')\r\n    }\r\n    useEffect(() => {\r\n        if (!found) setOpen(true)\r\n    }, [found])\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return\r\n        }\r\n        setOpen(false)\r\n    }\r\n\r\n    const inputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setTerm(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Snackbar\r\n                open={open}\r\n                autoHideDuration={4000}\r\n                onClose={handleClose}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\r\n            >\r\n                <Alert onClose={handleClose} severity='info'>\r\n                    Nothing was found\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <div className={classes.SearchForm}>\r\n                <form\r\n                    className={classes.root}\r\n                    noValidate\r\n                    autoComplete='off'\r\n                    onSubmit={e => {\r\n                        e.preventDefault()\r\n                        formSubmitHandler(e)\r\n                    }}\r\n                >\r\n                    <TextField\r\n                        id='standard-basic'\r\n                        label='Search NPM packages\r\n'\r\n                        onChange={inputChangeHandler}\r\n                        value={term}\r\n                    />\r\n                    <Button\r\n                        color='primary'\r\n                        onClick={formSubmitHandler}\r\n                        className={classes.btn}\r\n                    >\r\n                        {' '}\r\n                        <SendIcon color='primary' />\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            {loading && <CircularProgress />}\r\n            {error && <div>{error}</div>}\r\n            {!loading && !error && <RepositoryItem data={data} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RepositoriesList\r\n","import { useDispatch } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { actionCreators } from '../state'\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch()\r\n    return bindActionCreators(actionCreators, dispatch)\r\n}\r\n","import React from 'react'\r\nimport NavBar from './NavBar'\r\nimport RepositoriesList from './RepositoriesList'\r\nimport { Container } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n       backgroundColor: theme.palette.background.default,\r\n       minHeight: '100vh',\r\n       paddingBottom: '100px'\r\n    }\r\n}))\r\n\r\nconst Layout = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div className={classes.root}>\r\n            <NavBar />\r\n            <Container maxWidth='md'>\r\n                <RepositoriesList />\r\n                \r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React, { ReactElement } from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from '../state'\r\n\r\nimport { createMuiTheme } from '@material-ui/core'\r\nimport { ThemeProvider } from '@material-ui/styles'\r\nimport Layout from './Layout'\r\n\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        type: 'dark',\r\n        primary: {\r\n            main: '#b2dfdb',\r\n          },\r\n        secondary: {\r\n            main: '#212121',\r\n            \r\n        }\r\n      \r\n    },\r\n})\r\n\r\nfunction App(): ReactElement {\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Provider store={store}>\r\n                <Layout />\r\n            </Provider>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}